version: 2.1

jobs:
  build_and_test:
    macos:
      xcode: "13.2.1"

    steps:
      - checkout

      - run:
          name: Set Default Scheme
          command: |
            scheme_list=$(xcodebuild -list -json | tr -d "\n")
            default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
            echo $default >default
            echo "Using default scheme: $default"

      - run:
          name: Build
          command: |
            # xcrun xctrace returns via stderr, not the expected stdout (see https://developer.apple.com/forums/thread/663959)
            device=`xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//"`
            if [ $CIRCLECI ] && [ $CIRCLE_BRANCH = "main" ]; then scheme=$(cat default); fi
            if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
            file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
            xcodebuild build-for-testing -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=iOS Simulator,name=$device"

      - run:
          name: Test
          command: |
            # xcrun xctrace returns via stderr, not the expected stdout (see https://developer.apple.com/forums/thread/663959)
            device=`xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//"`
            if [ $CIRCLECI ] && [ $CIRCLE_BRANCH = "main" ]; then scheme=$(cat default); fi
            if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
            file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
            xcodebuild test-without-building -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=iOS Simulator,name=$device"
